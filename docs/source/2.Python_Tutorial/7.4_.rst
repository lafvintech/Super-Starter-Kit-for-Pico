7.4.Setup a Web Server
==================================
In this article, you will learn how to make Pico W a web server that allows you to operate the circuit and get readings from the sensor from a browser.

Component List
^^^^^^^^^^^^^^^
- Raspberry Pi Pico W x1
- MicroUSB cable x1
- 830 Tie-Points Breadboard x1
- DHT11 Module x1
- Resistor 220Î© x3
- RGB-LED x1
- Li-po Charger Module x1
- Battery Holder x1
- Jumper Wire Several

.. warning:: 
    
    Modification of electrical appliances comes with great danger, do not try it 
    lightly, please do it under the guidance of professionals.

Connect
^^^^^^^^^
.. warning:: 
    Make sure your Li-po Charger Module is connected as shown in the diagram. Otherwise, a short circuit will likely damage your battery and circuitry.

.. image:: img/3.connect/7.4_con.png

Code
^^^^^^^
.. note::

    * Open the ``7.4.py`` file under the path of ``Ultimate-Starter-Kit-for-Pico-W\Python\1.Project\iot`` or copy this code into Thonny, then click "Run Current Script" or simply press F5 to run it.

    * Don't forget to click on the "MicroPython (Raspberry Pi Pico)" interpreter in the bottom right corner. 
    
    * Before running the code, you need to make sure you have do_connect.py and secrets.py scripts in your Pico W, if not please refer to 8.1 Access to the Network to create them.

.. image:: img/7.IOT/7.4_soft.png

Click 'Run current script'. After a successful connection, the shell will display the IP address of the Pico W. You can then enter the IP address in your browser to see the webpage, where you can change the RGB light color using the buttons above and view the temperature and humidity.

If you want this script to be able to boot up, you can save it to the Raspberry Pi Pico W as ``main.py``.

The following is the program code:

.. code-block:: python

    from machine import Pin
    import socket
    import math
    from dht import DHT11, InvalidPulseCount
    from time import sleep
    from secrets import *
    from do_connect import *

    # rgb led
    red=machine.Pin(13,machine.Pin.OUT)
    green=machine.Pin(14,machine.Pin.OUT)
    blue=machine.Pin(15,machine.Pin.OUT)

    sensor_pin = Pin(16, Pin.IN)
    dht_sensor = DHT11(sensor_pin)

    def get_temperature_humidity():
        try:
            dht_sensor.measure()
            temperature = dht_sensor.temperature
            humidity = dht_sensor.humidity
            return temperature, humidity
        except:
            return None, None

    def webpage(temp, hum):
        html = f"""
                <!DOCTYPE html>
                <html>
                <body>
                <form action="./red">
                <input type="submit" value="red " />
                </form>
                <form action="./green">
                <input type="submit" value="green" />
                </form>
                <form action="./blue">
                <input type="submit" value="blue" />
                </form>
                <form action="./off">
                <input type="submit" value="off" />
                </form>
                <p>Temperature: {temp}C</p>
                <p>Humidity: {hum}%</p>
                </body>
                </html>
                """
        return html

    def serve(connection):
        while True:
            client = connection.accept()[0]
            request = client.recv(1024)
            request = str(request)
            try:
                request = request.split()[1]
            except IndexError:
                pass
            
            print(request)
            
            if request == '/off?':
                red.low()
                green.low()
                blue.low()
            elif request == '/red?':
                red.high()
                green.low()
                blue.low()
            elif request == '/green?':
                red.low()
                green.high()
                blue.low()
            elif request == '/blue?':
                red.low()
                green.low()
                blue.high()

            temperature, humidity = get_temperature_humidity()
            if temperature is None:
                temperature = "Error"
                humidity = "Error"
            else:
                temperature = "{:.1f}".format(temperature)
                humidity = "{:.1f}".format(humidity)
                
            html = webpage(temperature, humidity)
            client.send(html)
            client.close()

    def open_socket(ip):
        # Open a socket
        address = (ip, 80)
        connection = socket.socket()
        connection.bind(address)
        connection.listen(1)
        print(connection)
        return(connection)

    try:
        ip=do_connect()
        if ip is not None:
            connection=open_socket(ip)
            serve(connection)
    except KeyboardInterrupt:
        machine.reset()

Phenomenon
^^^^^^^^^^^
.. video:: img/5.phenomenon/6.13.mp4
    :width: 100%