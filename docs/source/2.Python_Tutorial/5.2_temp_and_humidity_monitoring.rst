5.2 Temp & Humidity Monitoring
==============================
Humidity and temperature are closely intertwined, both in physical terms and in their 
impact on daily life. The temperature and humidity of our environment directly influence 
the body's thermoregulation and heat transfer mechanisms. These factors can further 
affect cognitive function and mental state, ultimately influencing our efficiency 
in studying and working.

Temperature is one of the seven base physical quantities in the International System 
of Units (SI) and is used to measure how hot or cold an object is. The Celsius scale, 
denoted by the symbol “℃” is one of the most widely used temperature scales globally.

Humidity refers to the amount of water vapor present in the air. In everyday life, 
relative humidity is commonly used and is expressed in %RH (percent relative humidity). 
Relative humidity is closely related to temperature. For a given volume of sealed gas, 
higher temperatures result in lower relative humidity, while lower temperatures lead 
to higher relative humidity.

.. image:: img/1.detail/5.2.png

A basic digital temperature and humidity sensor, the DHT11, is provided in this kit. 
It uses a capacitive humidity sensor and thermistor to measure the surrounding air 
and outputs a digital signal on the data pins (no analog input pins are required).

Component List
^^^^^^^^^^^^^^^
- Raspberry Pi Pico W x1
- MicroUSB cable x1
- 830 Tie-Points Breadboard x1
- DHT11 Module x1
- Jumper Wire Several

Component knowledge
^^^^^^^^^^^^^^^^^^^^
:ref:`DHT11 Module <cpn_dht11_module>`
""""""""""""""""""""""""""""""""""""""""

Schematic
^^^^^^^^^^
.. image:: img/2.sch/5.2.png

Connect
^^^^^^^^^
.. image:: img/3.connect/5.2.png

Code
^^^^^^^
.. note::

    * Open the ``5.2_temp_and_humidity_monitoring.py`` file under the path of ``Ultimate-Starter-Kit-for-Pico-W\Python\1.Project`` or copy this code into Thonny, then click "Run Current Script" or simply press F5 to run it.

    * Don't forget to click on the "MicroPython (Raspberry Pi Pico)" interpreter in the bottom right corner. 

.. image:: img/4.software/5.2.png

Click “Run current script”, you will see the Shell continuously print out the temperature and humidity, and as the program runs steadily, these two values will become more and more accurate.

The following is the program code:

.. code-block:: python

    from machine import Pin
    import utime as time
    from dht import DHT11, InvalidPulseCount

    pin = Pin(16, Pin.IN)
    sensor = DHT11(pin)
    time.sleep(5)  # initial delay

    while True:
        try:
            sensor.measure()
            string = "Temperature:{}\nHumidity: {}".format(sensor.temperature, sensor.humidity)
            print(string)
            time.sleep(4)

        except InvalidPulseCount as e:
            print('Bad pulse count - retrying ...')


Phenomenon
^^^^^^^^^^^
.. image:: img/5.phenomenon/5.2.png
    :width: 100%